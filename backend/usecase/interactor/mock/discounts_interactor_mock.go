// Code generated by MockGen. DO NOT EDIT.
// Source: discounts_interactor.go

// Package mock_interactor is a generated GoMock package.
package mock_interactor

import (
	reflect "reflect"

	models "github.com/Cirivas/desafio-walmart/models"
	gomock "github.com/golang/mock/gomock"
)

// MockDiscountsInteractor is a mock of DiscountsInteractor interface.
type MockDiscountsInteractor struct {
	ctrl     *gomock.Controller
	recorder *MockDiscountsInteractorMockRecorder
}

// MockDiscountsInteractorMockRecorder is the mock recorder for MockDiscountsInteractor.
type MockDiscountsInteractorMockRecorder struct {
	mock *MockDiscountsInteractor
}

// NewMockDiscountsInteractor creates a new mock instance.
func NewMockDiscountsInteractor(ctrl *gomock.Controller) *MockDiscountsInteractor {
	mock := &MockDiscountsInteractor{ctrl: ctrl}
	mock.recorder = &MockDiscountsInteractorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockDiscountsInteractor) EXPECT() *MockDiscountsInteractorMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockDiscountsInteractor) Get(brand string) (*models.Discount, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", brand)
	ret0, _ := ret[0].(*models.Discount)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockDiscountsInteractorMockRecorder) Get(brand interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockDiscountsInteractor)(nil).Get), brand)
}
